Proveď prosím definitivní fix SafeArea tak, aby žádný nadpis (“Almost there!”, “Sign in”, “Continue with Email”, “Create Account”) nebyl překryt notchem / status barem na iOS ani Androidu.

1) Kořenová integrace SafeArea

Ujisti se, že projekt používá react-native-safe-area-context. Pokud není, nainstaluj:
expo install react-native-safe-area-context

V App.tsx nebo kořenovém entry (kde mountujeme NavigationContainer) obal celou app do:

import { SafeAreaProvider } from 'react-native-safe-area-context';
import { StatusBar } from 'react-native';
// ...
export default function App() {
  return (
    <SafeAreaProvider>
      <StatusBar translucent={false} backgroundColor="transparent" barStyle="light-content" />
      <NavigationRootOrApp />
    </SafeAreaProvider>
  );
}


Důležité: translucent={false} na Androidu, jinak se obsah posune pod status bar.

2) Jednotný ScreenContainer (řeší top inset všude)

Vytvoř components/ScreenContainer.tsx:

import React from 'react';
import { Platform, KeyboardAvoidingView, ScrollView, View, ViewProps } from 'react-native';
import { SafeAreaView, useSafeAreaInsets } from 'react-native-safe-area-context';

type Props = ViewProps & {
  scroll?: boolean;          // když screen potřebuje ScrollView
  children: React.ReactNode;
};

export default function ScreenContainer({ scroll = false, style, children, ...rest }: Props) {
  const insets = useSafeAreaInsets();
  const topSafe = Math.max(insets.top, Platform.OS === 'android' ? 24 : 0); // záloha pro starší zařízení

  const Content = (
    <>
      {/* Top spacer zaručí, že titul nikdy neleze do notche */}
      <View style={{ height: topSafe + 24 }} />
      <View style={[{ paddingHorizontal: 20 }, style]} {...rest}>
        {children}
      </View>
    </>
  );

  if (scroll) {
    return (
      <SafeAreaView style={{ flex: 1 }} edges={['left', 'right']} >
        <KeyboardAvoidingView
          behavior={Platform.OS === 'ios' ? 'padding' : undefined}
          style={{ flex: 1 }}
        >
          <ScrollView
            style={{ flex: 1 }}
            contentInsetAdjustmentBehavior="always"
            keyboardShouldPersistTaps="handled"
          >
            {Content}
          </ScrollView>
        </KeyboardAvoidingView>
      </SafeAreaView>
    );
  }

  return (
    <SafeAreaView style={{ flex: 1 }} edges={['left', 'right']}>
      <KeyboardAvoidingView
        behavior={Platform.OS === 'ios' ? 'padding' : undefined}
        style={{ flex: 1 }}
      >
        {Content}
      </KeyboardAvoidingView>
    </SafeAreaView>
  );
}


Záměr: nezabíráme edges='top', ale řešíme top padding explicitním spacrem (spolehlivé i když insets vrací 0 kvůli chybějícímu provideru).

contentInsetAdjustmentBehavior="always" zajistí iOS auto-offset u ScrollView.

3) Nahraď kontejnery na problémových screenech

Otevři:

screens/JourneyScreen.tsx (Almost there!)

screens/SignInScreen.tsx

screens/EmailContinueScreen.tsx

screens/SignUpScreen.tsx

V každém screeně:

Odstraň přímé používání SafeAreaView, useSafeAreaInsets() a ruční paddingTop.

Zabal obsah do ScreenContainer:

import ScreenContainer from '../components/ScreenContainer';
// ...
export default function JourneyScreen() {
  return (
    <ScreenContainer scroll>
      {/* Gradient background zůstává jako background element, ale NIKDY nepřekrývej obsah absolute v top 0 bez spaceru */}
      <TitleLarge>Almost there!</TitleLarge>
      {/* ...zbytek obsahu beze změny... */}
    </ScreenContainer>
  );
}


Zruš position: 'absolute' u wrapperů nadpisů (pokud je použito) – nahraď normálním flow layoutem. Pokud absolutní pozicování musí zůstat kvůli vizuálu, přidej top: (insets.top || 32) + 24.

4) StatusBar a navigace

Zkontroluj, že nikde v app nenastavujeme StatusBar translucent={true}. Pokud ano, přepni na false.

Pokud používáme React Navigation a headerTransparent, ujisti se, že tyto screeny mají headerShown: false, aby se nezapočítávalo overlay.

5) Akceptační kritéria (ověř na zařízení iOS i Android)

Žádný nadpis není oříznutý ani překrytý.

Top spacing je konzistentní napříč „Almost there!“, „Sign in“, „Continue with Email“, „Create Account“.

Nebyly změněny fonty, barvy, gradienty, CTA; pouze layout nad horním okrajem.

Scroll na menších displejích neřeže nadpis (díky contentInsetAdjustmentBehavior="always").

Po dokončení prosím pošli diff změn.